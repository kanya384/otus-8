{
    "swagger": "2.0",
    "info": {
        "description": "hr-report backend",
        "title": "hr-report backend",
        "contact": {
            "name": "API Support",
            "email": "kanya384@mail.ru"
        },
        "license": {
            "name": "kanya384"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/amocrm/auth": {
            "get": {
                "description": "Редирект на страницу авторизации приложения в амо.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "integration"
                ],
                "summary": "Редирект на страницу авторизации приложения в амо.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "referer",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Temporary Redirect"
                    }
                }
            }
        },
        "/amocrm/code": {
            "get": {
                "description": "Получаем код авторизации из oauth и обновляем или создаем интеграцию.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "integration"
                ],
                "summary": "Получаем код авторизации из oauth и обновляем или создаем интеграцию.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "referer",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/amofile/": {
            "get": {
                "description": "получить список файлов амо.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amofile"
                ],
                "summary": "получить список файлов амо.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Начальный индекс",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "параметры для сортировки, пример (created_at:+;modified_at:-)",
                        "name": "sorting",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/amofile.AmoFileListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/amofile/mass": {
            "delete": {
                "description": "массовое удаление файлов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amofile"
                ],
                "summary": "массовое удаление файлов",
                "parameters": [
                    {
                        "description": "Данные о решение модератора",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/amofile.MassDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/amofile.MassDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/amofile/{id}": {
            "get": {
                "description": "получить список файлов амо.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amofile"
                ],
                "summary": "получить список файлов амо.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор файла",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/amofile.AmoFileListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "создание файла для амо.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amofile"
                ],
                "summary": "создание файла для амо.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "description": "Файл для амо",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/amofile.AmoFileResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить afqk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amofile"
                ],
                "summary": "удалить afqk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор файла",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-in": {
            "post": {
                "description": "авторизация пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "авторизация пользователя.",
                "parameters": [
                    {
                        "description": "Данные для аутентификации",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/moderation_internal_delivery_auth.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cause/": {
            "get": {
                "description": "получить список всех причин.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "causes"
                ],
                "summary": "получить список всех причин.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cause.CauseResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "создание списка причин.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "causes"
                ],
                "summary": "создание списка причин.",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "cause",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cause.CreateCauseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cause.CauseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cause/lead/{id}": {
            "get": {
                "description": "получить причины по id  лида.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "causes"
                ],
                "summary": "получить причины по id лида.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cause.CauseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cause/packet/{key}/{id}": {
            "post": {
                "description": "получить причины для пакета.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "causes"
                ],
                "summary": "получить причины для пакета.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Api ключ",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cause/{id}": {
            "get": {
                "description": "получить причины по id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "causes"
                ],
                "summary": "получить причины по id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор причины",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cause.CauseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "обновление списка причин.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "causes"
                ],
                "summary": "обновление списка причин.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления пользователя",
                        "name": "cause",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cause.UpdateCauseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cause.CauseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить причины",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "causes"
                ],
                "summary": "удалить причины",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор причины",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cause.CauseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/city": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список  городов портала.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Возвращает список  городов портала.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/city.CityListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/client": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список клиентов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Возвращает список клиентов.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/client.ClientListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/": {
            "get": {
                "description": "получить отфильтрованный список лидов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "получить отфильтрованный список лидов.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id клиента",
                        "name": "client",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "id менеджера",
                        "name": "managerId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "статус лида",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "id города",
                        "name": "cityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "пакет лида",
                        "name": "packet",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "дата передачи лида от",
                        "name": "transferDateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "дата передачи лида по",
                        "name": "transferDateTo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Начальный индекс",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "параметры для сортировки, пример (created_at:+;modified_at:-)",
                        "name": "sorting",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/annul/{id}": {
            "put": {
                "description": "анулировать лид.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "анулировать лид.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/client-cause/{id}": {
            "put": {
                "description": "редактирование причины клиента.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "редактирование причины клиента.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные о причине клиента",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lead.ClientCauseEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/csv": {
            "get": {
                "description": "получить отфильтрованный список лидов  в csv.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "получить отфильтрованный список лидов в csv.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id клиента",
                        "name": "client",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "id менеджера",
                        "name": "managerId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "статус лида",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "id города",
                        "name": "cityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "пакет лида",
                        "name": "packet",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "дата передачи лида от",
                        "name": "transferDateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "дата передачи лида по",
                        "name": "transferDateTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "параметры для сортировки, пример (created_at:+;modified_at:-)",
                        "name": "sorting",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.FileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/decision/{id}": {
            "put": {
                "description": "решение модератора.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "решение модератора.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные о решение модератора",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lead.ModeratorDecision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/exchange-on-zero/{id}": {
            "put": {
                "description": "замена на 0.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "замена на 0.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/finalize/{id}": {
            "put": {
                "description": "решение модератора.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "решение модератора.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/moderator/{id}": {
            "put": {
                "description": "установить модератора для лида.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "установить модератора для лида.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные о решение модератора",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lead.SetModeratorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/reject/{id}": {
            "put": {
                "description": "отклонить лид.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "отклонить лид.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/status": {
            "get": {
                "description": "получить список статусов лида.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "получить список статусов лида.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lead.ItemDescription"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/{id}": {
            "get": {
                "description": "получить лид по id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "получить лид по id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lead.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/manager": {
            "get": {
                "description": "получить список всех менеджеров.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "managers"
                ],
                "summary": "получить список всех менеджеров.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/moderator": {
            "get": {
                "description": "получить список всех модераторов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "managers"
                ],
                "summary": "получить список всех модераторов.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/packet": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список  городов портала.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "packet"
                ],
                "summary": "Возвращает список  городов портала.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packet.PacketListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/": {
            "get": {
                "description": "получить список всех источников.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "получить список всех пользователей.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "создание пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "создание пользователя.",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "description": "получить платеж по id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "получить платеж по id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор платежа",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "обновление пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "обновление пользователя.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "удалить пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/widget/kc/{key}/{id}": {
            "post": {
                "description": "отправить на прозвон в КЦ.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "widget"
                ],
                "summary": "отправить на прозвон в КЦ.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Api ключ",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/widget/lead/{key}/{id}": {
            "post": {
                "description": "есть ли лид в системе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "widget"
                ],
                "summary": "есть ли лид в системе.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Api ключ",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/widget/moderation/{key}/{id}": {
            "post": {
                "description": "отправить на модерацию.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "widget"
                ],
                "summary": "отправить на модерацию.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор лида",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Api ключ",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "amofile.AmoFileListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amofile.AmoFileResponse"
                    }
                }
            }
        },
        "amofile.AmoFileResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "file",
                "id",
                "leadId",
                "modifiedAt",
                "path"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "leadId": {
                    "type": "integer"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "amofile.MassDeleteRequest": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "amofile.MassDeleteResponse": {
            "type": "object",
            "required": [
                "deleted_ids"
            ],
            "properties": {
                "deleted_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "auth.SignInRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "minLength": 4,
                    "example": "admin"
                },
                "pass": {
                    "type": "string",
                    "minLength": 5,
                    "example": "password"
                }
            }
        },
        "cause.CauseResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "packet_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "cause.CreateCauseRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "packet_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "cause.UpdateCauseRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "packet_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "city.CityListResponse": {
            "type": "object",
            "required": [
                "list"
            ],
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/moderation_internal_delivery_city.City"
                    }
                }
            }
        },
        "client.ClientListResponse": {
            "type": "object",
            "required": [
                "list"
            ],
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/moderation_internal_delivery_client.Client"
                    }
                }
            }
        },
        "delivery.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "lead.ClientCauseEdit": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string"
                }
            }
        },
        "lead.Decision": {
            "type": "string",
            "enum": [
                "approved",
                "not_approved",
                "disputable",
                ""
            ],
            "x-enum-varnames": [
                "Approved",
                "NotApproved",
                "Disputable",
                "EmptyD"
            ]
        },
        "lead.FileResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "lead.ItemDescription": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "lead.LeadListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lead.LeadResponse"
                    }
                }
            }
        },
        "lead.LeadResponse": {
            "type": "object",
            "properties": {
                "actionDate": {
                    "type": "string"
                },
                "cause": {
                    "type": "string"
                },
                "cityId": {
                    "type": "integer"
                },
                "cityName": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "clientLeadsGrowth": {
                    "type": "boolean"
                },
                "clientName": {
                    "type": "string"
                },
                "clientReason": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "decision": {
                    "$ref": "#/definitions/lead.Decision"
                },
                "id": {
                    "type": "integer"
                },
                "managerId": {
                    "type": "integer"
                },
                "moderateAddDate": {
                    "type": "string"
                },
                "moderatedAt": {
                    "type": "string"
                },
                "moderatorId": {
                    "type": "integer"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "packet": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "processedToAmo": {
                    "$ref": "#/definitions/lead.ProcessingToAmoStatus"
                },
                "status": {
                    "$ref": "#/definitions/lead.Status"
                },
                "transferDate": {
                    "type": "string"
                }
            }
        },
        "lead.ModeratorDecision": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "decision": {
                    "type": "string"
                }
            }
        },
        "lead.ProcessingToAmoStatus": {
            "type": "string",
            "enum": [
                "not_processed",
                "processed",
                "error_processing"
            ],
            "x-enum-varnames": [
                "NotProcessed",
                "Processed",
                "ErrorProcessing"
            ]
        },
        "lead.SetModeratorRequest": {
            "type": "object",
            "properties": {
                "moderator_id": {
                    "type": "integer"
                }
            }
        },
        "lead.Status": {
            "type": "string",
            "enum": [
                "moderating",
                "moderated",
                "exchange_to_zero",
                "rejected",
                "annul",
                ""
            ],
            "x-enum-varnames": [
                "Moderating",
                "Moderated",
                "ExchangeToZero",
                "Rejected",
                "Annul",
                "Empty"
            ]
        },
        "moderation_internal_delivery_auth.SignInResponse": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "moderation_internal_delivery_city.City": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "moderation_internal_delivery_client.Client": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "moderation_internal_delivery_packet.Packet": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "packet.PacketListResponse": {
            "type": "object",
            "required": [
                "list"
            ],
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/moderation_internal_delivery_packet.Packet"
                    }
                }
            }
        },
        "user.CreateUserRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deputy": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deputy": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "user.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deputy": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}